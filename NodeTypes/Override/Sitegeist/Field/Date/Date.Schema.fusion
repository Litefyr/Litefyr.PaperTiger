prototype(Sitegeist.PaperTiger:Field.Date.Schema) {
    dateRangeValidatorOptions >
    dateRangeValidatorOptions = Neos.Fusion:Case {
        @process {
            filter = ${Array.filter(value)}
            toString = ${Array.map(value, item => Date.format(item, 'Y-m-d'))}
        }
        useRelativeMinMax {
            condition = ${q(node).property('useRelativeMinMax')}
            renderer = Neos.Fusion:DataStructure {
                earliestDate = ${Carbon.RelativeDate.getDate(q(node).property('relativeEarliestDate'))}
                latestDate = ${Carbon.RelativeDate.getDate(q(node).property('relativeLatestDate'))}
            }
        }
        default {
            condition = true
            renderer = Neos.Fusion:DataStructure {
                earliestDate = ${q(node).property('earliestDate')}
                latestDate = ${q(node).property('latestDate')}
            }
        }
    }
}
