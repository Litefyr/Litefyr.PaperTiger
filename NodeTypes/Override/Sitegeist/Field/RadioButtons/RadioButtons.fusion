prototype(Sitegeist.PaperTiger:Field.RadioButtons) {
    customErrorMessageEnabled = ${q(node).property('customErrorMessageEnabled')}
    customErrorMessage = ${q(node).property('customErrorMessage')}

    renderer >
    renderer = afx`
        <Sitegeist.PaperTiger:FieldContainer
            field.name={props.name}
            field.multiple={true}
            label={props.label}
            needTagName={field.hasErrors() || props.label || Array.length(props.options) > 1 ? 'div' : null}
            labelRenderer="Litespeed.PaperTiger:Component.HeadlineLabel"
            class="flex flex-col gap-2"
        >
            <Neos.Fusion:Loop items={props.options} itemName="option">
                <label class="cursor-pointer inline-flex gap-2 items-baseline justify-start">
                    <Neos.Fusion.Form:Radio
                        attributes.required={props.isRequired}
                        attributes.oninvalid={"this.setCustomValidity('" + props.customErrorMessage + "')"}
                        attributes.oninvalid.@if={props.customErrorMessageEnabled}
                        attributes.oninput={"this.setCustomValidity('')"}
                        attributes.oninput.@if={props.customErrorMessageEnabled}
                        field.value={option.value}
                    /> {option.label || option.value}
                </label>
            </Neos.Fusion:Loop>
        </Sitegeist.PaperTiger:FieldContainer>
    `
}
